buildscript {
    ext.kotlin_version = '1.8.10'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
}
apply plugin: 'kotlin'

repositories {
    mavenLocal()
    mavenCentral()
}


allprojects { apply plugin: "idea" }

sourceSets {
    main {
        java {
            srcDirs += 'gavui/src/main/java'
        }
        kotlin {
            srcDirs += 'gavinsmod-events/src/main/kotlin'
            srcDirs += 'mods/antifire/src/main/kotlin'
            srcDirs += 'mods/antihurt/src/main/kotlin'
            srcDirs += 'mods/antipumpkin/src/main/kotlin'
            srcDirs += 'mods/antitrample/src/main/kotlin'
            srcDirs += 'mods/autoattack/src/main/kotlin'
            srcDirs += 'mods/autocrit/src/main/kotlin'
            srcDirs += 'mods/autojump/src/main/kotlin'
            srcDirs += 'mods/barrierdetect/src/main/kotlin'
            srcDirs += 'mods/beehiveesp/src/main/kotlin'
            srcDirs += 'mods/beehivetracer/src/main/kotlin'
            srcDirs += 'mods/chestesp/src/main/kotlin'
            srcDirs += 'mods/chesttracer/src/main/kotlin'
            srcDirs += 'mods/climb/src/main/kotlin'
            srcDirs += 'mods/dolphin/src/main/kotlin'
            srcDirs += 'mods/entityitemesp/src/main/kotlin'
            srcDirs += 'mods/entityitemtracer/src/main/kotlin'
            srcDirs += 'mods/entityplayeresp/src/main/kotlin'
            srcDirs += 'mods/entityplayertracer/src/main/kotlin'
            srcDirs += 'mods/fastmine/src/main/kotlin'
            srcDirs += 'mods/fastplace/src/main/kotlin'
            srcDirs += 'mods/fly/src/main/kotlin'
            srcDirs += 'mods/fpscounter/src/main/kotlin'
            srcDirs += 'mods/freecam/src/main/kotlin'
            srcDirs += 'mods/fullbright/src/main/kotlin'
            srcDirs += 'mods/furnaceesp/src/main/kotlin'
            srcDirs += 'mods/furnacetracer/src/main/kotlin'
            srcDirs += 'mods/guitextoverlay/src/main/kotlin'
            srcDirs += 'mods/healthtag/src/main/kotlin'
            srcDirs += 'mods/killaura/src/main/kotlin'
            srcDirs += 'mods/mobesp/src/main/kotlin'
            srcDirs += 'mods/mobtracer/src/main/kotlin'
            srcDirs += 'mods/noclip/src/main/kotlin'
            srcDirs += 'mods/nofall/src/main/kotlin'
            srcDirs += 'mods/nonausea/src/main/kotlin'
            srcDirs += 'mods/nooverlay/src/main/kotlin'
            srcDirs += 'mods/norain/src/main/kotlin'
            srcDirs += 'mods/novignette/src/main/kotlin'
            srcDirs += 'mods/radar/src/main/kotlin'
            srcDirs += 'mods/speed/src/main/kotlin'
            srcDirs += 'mods/waypoint/src/main/kotlin'
            srcDirs += 'mods/waypoints/src/main/kotlin'
            srcDirs += 'mods/xray/src/main/kotlin'

        }
    }
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:1.9.1+kotlin.$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
